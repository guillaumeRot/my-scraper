name: Deploy scraper to Raspberry Pi

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "SSH deploy to Raspberry Pi"
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.PI_SSH_KEY }}
          port: ${{ secrets.PI_PORT || 22 }}
          script: |
            set -e

            # aller dans le répertoire du projet
            cd ~/my-scraper

            # récupérer le dernier code (force pour éviter état local divergents)
            git fetch --all
            git reset --hard origin/master

            # installer dépendances (si tu utilises nvm, décommenter le bloc nvm)
            # export NVM_DIR="$HOME/.nvm"
            # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            npm ci --production
            npm install tsx --save-dev          # installer tsx si absent
            npx prisma generate                  # générer le client Prisma

            # build TypeScript si nécessaire (optionnel si tu utilises tsx)
            # npm run build

            # redémarrer avec pm2 (ou démarrer si absent)
            if pm2 describe my-scraper-api > /dev/null; then
              pm2 restart my-scraper-api
            else
              pm2 start npx --name my-scraper-api -- tsx server.js
            fi

            # sauvegarder l'état pm2
            pm2 save
